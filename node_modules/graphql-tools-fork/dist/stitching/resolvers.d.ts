import { GraphQLSchema, GraphQLFieldResolver, GraphQLObjectType } from 'graphql';
import { IResolvers, Operation, SubschemaConfig } from '../Interfaces';
export declare type Mapping = {
    [typeName: string]: {
        [fieldName: string]: {
            name: string;
            operation: Operation;
        };
    };
};
export declare function generateProxyingResolvers(subschemaConfig: SubschemaConfig, createProxyingResolver?: (schema: GraphQLSchema | SubschemaConfig, operation: Operation, fieldName: string) => GraphQLFieldResolver<any, any>): IResolvers;
export declare function generateSimpleMapping(targetSchema: GraphQLSchema): Mapping;
export declare function generateMappingFromObjectType(type: GraphQLObjectType, operation: Operation): {
    [fieldName: string]: {
        name: string;
        operation: Operation;
    };
};
export declare function stripResolvers(schema: GraphQLSchema): void;
