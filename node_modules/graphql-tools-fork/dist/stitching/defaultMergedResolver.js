Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var proxiedResult_1 = require("./proxiedResult");
var checkResultAndHandleErrors_1 = require("./checkResultAndHandleErrors");
var getResponseKeyFromInfo_1 = require("./getResponseKeyFromInfo");
// Resolver that knows how to:
// a) handle aliases for proxied schemas
// b) handle errors from proxied schemas
// c) handle external to internal enum coversion
function defaultMergedResolver(parent, args, context, info) {
    if (!parent) {
        return null;
    }
    var responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);
    var errors = proxiedResult_1.getErrors(parent, responseKey);
    // check to see if parent is not a proxied result, i.e. if parent resolver was manually overwritten
    // See https://github.com/apollographql/graphql-tools/issues/967
    if (!errors) {
        return graphql_1.defaultFieldResolver(parent, args, context, info);
    }
    var result = parent[responseKey];
    var subschemas = proxiedResult_1.getSubschemas(parent);
    return checkResultAndHandleErrors_1.handleResult(result, errors, subschemas, context, info);
}
exports.default = defaultMergedResolver;
//# sourceMappingURL=defaultMergedResolver.js.map