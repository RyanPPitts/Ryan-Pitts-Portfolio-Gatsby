import { DocumentNode, GraphQLNamedType, GraphQLSchema } from 'graphql';
import { OnTypeConflict, IResolversParameter, SchemaLikeObject, SubschemaConfig } from '../Interfaces';
import { SchemaDirectiveVisitor } from '../utils';
export default function mergeSchemas({ subschemas, types, typeDefs, schemas: schemaLikeObjects, mergeTypes, onTypeConflict, resolvers, schemaDirectives, inheritResolversFromInterfaces, mergeDirectives, }: {
    subschemas?: Array<GraphQLSchema | SubschemaConfig>;
    types?: Array<GraphQLNamedType>;
    typeDefs?: string | DocumentNode;
    schemas?: Array<SchemaLikeObject>;
    mergeTypes?: Array<string>;
    onTypeConflict?: OnTypeConflict;
    resolvers?: IResolversParameter;
    schemaDirectives?: {
        [name: string]: typeof SchemaDirectiveVisitor;
    };
    inheritResolversFromInterfaces?: boolean;
    mergeDirectives?: boolean;
}): GraphQLSchema;
