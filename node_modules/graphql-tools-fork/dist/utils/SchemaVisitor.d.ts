import { GraphQLArgument, GraphQLEnumType, GraphQLEnumValue, GraphQLField, GraphQLInputField, GraphQLInputObjectType, GraphQLInterfaceType, GraphQLObjectType, GraphQLScalarType, GraphQLSchema, GraphQLUnionType } from 'graphql';
export declare abstract class SchemaVisitor {
    schema: GraphQLSchema;
    static implementsVisitorMethod(methodName: string): boolean;
    visitSchema(schema: GraphQLSchema): void;
    visitScalar(scalar: GraphQLScalarType): GraphQLScalarType | void | null;
    visitObject(object: GraphQLObjectType): GraphQLObjectType | void | null;
    visitFieldDefinition(field: GraphQLField<any, any>, details: {
        objectType: GraphQLObjectType | GraphQLInterfaceType;
    }): GraphQLField<any, any> | void | null;
    visitArgumentDefinition(argument: GraphQLArgument, details: {
        field: GraphQLField<any, any>;
        objectType: GraphQLObjectType | GraphQLInterfaceType;
    }): GraphQLArgument | void | null;
    visitInterface(iface: GraphQLInterfaceType): GraphQLInterfaceType | void | null;
    visitUnion(union: GraphQLUnionType): GraphQLUnionType | void | null;
    visitEnum(type: GraphQLEnumType): GraphQLEnumType | void | null;
    visitEnumValue(value: GraphQLEnumValue, details: {
        enumType: GraphQLEnumType;
    }): GraphQLEnumValue | void | null;
    visitInputObject(object: GraphQLInputObjectType): GraphQLInputObjectType | void | null;
    visitInputFieldDefinition(field: GraphQLInputField, details: {
        objectType: GraphQLInputObjectType;
    }): GraphQLInputField | void | null;
}
