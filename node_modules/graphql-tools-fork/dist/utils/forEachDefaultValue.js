Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
function forEachDefaultValue(schema, fn) {
    var typeMap = schema.getTypeMap();
    Object.keys(typeMap).forEach(function (typeName) {
        var type = typeMap[typeName];
        if (!graphql_1.getNamedType(type).name.startsWith('__')) {
            if (type instanceof graphql_1.GraphQLObjectType) {
                var fields_1 = type.getFields();
                Object.keys(fields_1).forEach(function (fieldName) {
                    var field = fields_1[fieldName];
                    field.args.forEach(function (arg) {
                        arg.defaultValue = fn(arg.type, arg.defaultValue);
                    });
                });
            }
            else if (type instanceof graphql_1.GraphQLInputObjectType) {
                var fields_2 = type.getFields();
                Object.keys(fields_2).forEach(function (fieldName) {
                    var field = fields_2[fieldName];
                    field.defaultValue = fn(field.type, field.defaultValue);
                });
            }
        }
    });
}
exports.forEachDefaultValue = forEachDefaultValue;
//# sourceMappingURL=forEachDefaultValue.js.map